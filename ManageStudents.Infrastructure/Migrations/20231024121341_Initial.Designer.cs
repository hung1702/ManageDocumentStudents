// <auto-generated />
using System;
using ManageStudents.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ManageStudents.Infrastructure.Migrations
{
    [DbContext(typeof(StudentContext))]
    [Migration("20231024121341_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ManageStudents.Infrastructure.Entities.Users.DiaChi", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("DiaChiId")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhuongXa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuanHuyen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TruongId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("TruongId")
                        .IsUnique();

                    b.ToTable("DiaChi", "dbo");
                });

            modelBuilder.Entity("ManageStudents.Infrastructure.Entities.Users.GiangVien", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GiangVienId")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("KhoaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaGiangVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaGiangVienId")
                        .HasColumnType("int");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("KhoaId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("GiangVien", "dbo");
                });

            modelBuilder.Entity("ManageStudents.Infrastructure.Entities.Users.Khoa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("KhoaId")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TruongId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("TruongId");

                    b.ToTable("Khoa", "dbo");
                });

            modelBuilder.Entity("ManageStudents.Infrastructure.Entities.Users.LopSinhVien", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LopSinhVienId")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("KhoaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenLop")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("KhoaId");

                    b.ToTable("LopSinhVien", "dbo");
                });

            modelBuilder.Entity("ManageStudents.Infrastructure.Entities.Users.SinhVien", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("SinhVienId")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("KhoaSinhVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KhoaSinhVienId")
                        .HasColumnType("int");

                    b.Property<Guid>("LopSinhVienId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaSinhVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaSinhVienId")
                        .HasColumnType("int");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("LopSinhVienId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("SinhVien", "dbo");
                });

            modelBuilder.Entity("ManageStudents.Infrastructure.Entities.Users.Truong", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TruongId")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DiaChiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.ToTable("Truong", "dbo");
                });

            modelBuilder.Entity("ManageStudents.Infrastructure.Entities.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeactivatedBy")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeactivatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DiaChiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GioiTinh")
                        .HasColumnType("int");

                    b.Property<string>("Ho")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ReviewingProfile")
                        .HasColumnType("bit");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("DiaChiId")
                        .IsUnique();

                    b.ToTable("User", "dbo");
                });

            modelBuilder.Entity("ManageStudents.Infrastructure.Entities.Users.DiaChi", b =>
                {
                    b.HasOne("ManageStudents.Infrastructure.Entities.Users.Truong", "TruongTB")
                        .WithOne("DiaChiTB")
                        .HasForeignKey("ManageStudents.Infrastructure.Entities.Users.DiaChi", "TruongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TruongTB");
                });

            modelBuilder.Entity("ManageStudents.Infrastructure.Entities.Users.GiangVien", b =>
                {
                    b.HasOne("ManageStudents.Infrastructure.Entities.Users.Khoa", "KhoaTB")
                        .WithMany("GiangVienTB")
                        .HasForeignKey("KhoaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ManageStudents.Infrastructure.Entities.Users.User", "UserTB")
                        .WithOne("GiangVienTB")
                        .HasForeignKey("ManageStudents.Infrastructure.Entities.Users.GiangVien", "UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("KhoaTB");

                    b.Navigation("UserTB");
                });

            modelBuilder.Entity("ManageStudents.Infrastructure.Entities.Users.Khoa", b =>
                {
                    b.HasOne("ManageStudents.Infrastructure.Entities.Users.Truong", "TruongTB")
                        .WithMany("KhoaTB")
                        .HasForeignKey("TruongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TruongTB");
                });

            modelBuilder.Entity("ManageStudents.Infrastructure.Entities.Users.LopSinhVien", b =>
                {
                    b.HasOne("ManageStudents.Infrastructure.Entities.Users.Khoa", "KhoaTB")
                        .WithMany("LopSinhVienTB")
                        .HasForeignKey("KhoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhoaTB");
                });

            modelBuilder.Entity("ManageStudents.Infrastructure.Entities.Users.SinhVien", b =>
                {
                    b.HasOne("ManageStudents.Infrastructure.Entities.Users.LopSinhVien", "LopSinhVienTB")
                        .WithMany("SinhVienTB")
                        .HasForeignKey("LopSinhVienId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ManageStudents.Infrastructure.Entities.Users.User", "UserTB")
                        .WithOne("SinhVienTB")
                        .HasForeignKey("ManageStudents.Infrastructure.Entities.Users.SinhVien", "UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LopSinhVienTB");

                    b.Navigation("UserTB");
                });

            modelBuilder.Entity("ManageStudents.Infrastructure.Entities.Users.User", b =>
                {
                    b.HasOne("ManageStudents.Infrastructure.Entities.Users.DiaChi", "DiaChiTB")
                        .WithOne("UserTB")
                        .HasForeignKey("ManageStudents.Infrastructure.Entities.Users.User", "DiaChiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DiaChiTB");
                });

            modelBuilder.Entity("ManageStudents.Infrastructure.Entities.Users.DiaChi", b =>
                {
                    b.Navigation("UserTB")
                        .IsRequired();
                });

            modelBuilder.Entity("ManageStudents.Infrastructure.Entities.Users.Khoa", b =>
                {
                    b.Navigation("GiangVienTB");

                    b.Navigation("LopSinhVienTB");
                });

            modelBuilder.Entity("ManageStudents.Infrastructure.Entities.Users.LopSinhVien", b =>
                {
                    b.Navigation("SinhVienTB");
                });

            modelBuilder.Entity("ManageStudents.Infrastructure.Entities.Users.Truong", b =>
                {
                    b.Navigation("DiaChiTB")
                        .IsRequired();

                    b.Navigation("KhoaTB");
                });

            modelBuilder.Entity("ManageStudents.Infrastructure.Entities.Users.User", b =>
                {
                    b.Navigation("GiangVienTB")
                        .IsRequired();

                    b.Navigation("SinhVienTB")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
